#!/usr/bin/env node

var path = require('path');
var fs = require('fs');
var compiler = require(path.join(path.dirname(fs.realpathSync(__filename)), "../ObjJAcornCompiler.js"));

var infile, compiled, options = {}, silent = false, compact = false;

function help(status) {
  console.log("usage: " + path.basename(process.argv[1]) + " infile [--ecma3|--ecma5] [--strictSemicolons]");
  console.log("        [--trackComments] [--trackSpaces] [--locations] [--noobjj] [--nopreprocess] [--compact] [--silent] [--help]");
  process.exit(status);
}

for (var i = 2; i < process.argv.length; ++i) {
  var arg = process.argv[i];
  if (arg == "--ecma3") options.ecmaVersion = 3;
  else if (arg == "--ecma5") options.ecmaVersion = 5;
  else if (arg == "--strictSemicolons") options.strictSemicolons = true;
  else if (arg == "--trackComments") options.trackComments = true;
  else if (arg == "--trackSpaces") options.trackSpaces = true;
  else if (arg == "--locations") options.locations = true;
  else if (arg == "--noobjj") options.objj = false;
  else if (arg == "--nopreprocess") options.preprocess = false;
  else if (arg == "--silent") silent = true;
  else if (arg == "--compact") compact = true;
  else if (arg == "--help") help(0);
  else if (arg[0] == "-") help(1);
  else infile = arg;
}

if (!infile) help(1);

try {
  var code = fs.readFileSync(infile, "utf8");
  compiled = compiler.compile(code, infile, options);
} catch(e) {
  console.log(e.message);
  process.exit(1);
}

if (!silent)
  console.log(compiled);
